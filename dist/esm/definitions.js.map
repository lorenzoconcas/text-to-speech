{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AA0CA,MAAM,CAAN,IAAY,aASX;AATD,WAAY,aAAa;IACvB;;OAEG;IACH,mDAAS,CAAA;IACT;;OAEG;IACH,+CAAO,CAAA;AACT,CAAC,EATW,aAAa,KAAb,aAAa,QASxB","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\r\n\r\nexport interface TextToSpeechPlugin {\r\n  /**\r\n   * Starts the TTS engine and plays the desired text.\r\n   */\r\n  speak(options: TTSOptions): Promise<void>;\r\n  /**\r\n   * Stops the TTS engine.\r\n   */\r\n  stop(): Promise<void>;\r\n  /**\r\n   * Returns a list of supported BCP 47 language tags.\r\n   */\r\n  getSupportedLanguages(): Promise<{ languages: string[] }>;\r\n  /**\r\n   * Returns a list of supported voices.\r\n   */\r\n  getSupportedVoices(): Promise<{ voices: SpeechSynthesisVoice[] }>;\r\n  /**\r\n   * Checks if a specific BCP 47 language tag is supported.\r\n   */\r\n  isLanguageSupported(options: { lang: string }): Promise<{ supported: boolean }>;\r\n  /**\r\n   * Verifies proper installation and availability of resource files on the system.\r\n   *\r\n   * Only available for Android.\r\n   */\r\n  openInstall(): Promise<void>;\r\n\r\n  addListener(\r\n    eventName: 'onRangeStart',\r\n    listenerFunc: (info: { start: number; end: number; spokenWord: string }) => void,\r\n  ): Promise<PluginListenerHandle>;\r\n\r\n\r\n  addListener(\r\n      eventName: 'onDone',\r\n      listenerFunc: (data: { utteranceId?: string }) => void\r\n    ): Promise<PluginListenerHandle>;\r\n}\r\n\r\nexport enum QueueStrategy {\r\n  /**\r\n   * Use `Flush` to stop the current request when a new request is sent.\r\n   */\r\n  Flush = 0,\r\n  /**\r\n   * Use `Add` to buffer the speech request. The request will be executed when all previous requests have been completed.\r\n   */\r\n  Add = 1,\r\n}\r\n\r\nexport interface TTSOptions {\r\n  /**\r\n   * The text that will be synthesised when the utterance is spoken.\r\n   *\r\n   * @example \"Hello world\"\r\n   */\r\n  text: string;\r\n  /**\r\n   * The language of the utterance.\r\n   * Possible languages can be queried using `getSupportedLanguages`.\r\n   *\r\n   * @default \"en-US\"\r\n   */\r\n  lang?: string;\r\n  /**\r\n   * The speed at which the utterance will be spoken at.\r\n   *\r\n   * @default 1.0\r\n   */\r\n  rate?: number;\r\n  /**\r\n   * The pitch at which the utterance will be spoken at.\r\n   *\r\n   * @default 1.0\r\n   */\r\n  pitch?: number;\r\n  /**\r\n   * The volume that the utterance will be spoken at.\r\n   *\r\n   * @default 1.0\r\n   */\r\n  volume?: number;\r\n  /**\r\n   * The index of the selected voice that will be used to speak the utterance.\r\n   * Possible voices can be queried using `getSupportedVoices`.\r\n   */\r\n  voice?: number;\r\n  /**\r\n   * Select the iOS Audio session category.\r\n   * Possible values: `ambient` and `playback`.\r\n   * Use `playback` to play audio even when the app is in the background.\r\n   *\r\n   * Only available for iOS.\r\n   *\r\n   * @default \"ambient\"\r\n   */\r\n  category?: string;\r\n  /**\r\n   * Select the strategy to adopt when several requests to speak overlap.\r\n   *\r\n   * @since 5.1.0\r\n   * @default QueueStrategy.Flush\r\n   */\r\n  queueStrategy?: QueueStrategy;\r\n}\r\n\r\n/**\r\n * The SpeechSynthesisVoice interface represents a voice that the system supports.\r\n */\r\nexport interface SpeechSynthesisVoice {\r\n  /**\r\n   * Specifies whether the voice is the default voice for the current app (`true`) or not (`false`).\r\n   *\r\n   * @example false\r\n   */\r\n  default: boolean;\r\n  /**\r\n   * BCP 47 language tag indicating the language of the voice.\r\n   *\r\n   * @example \"en-US\"\r\n   */\r\n  lang: string;\r\n  /**\r\n   * Specifies whether the voice is supplied by a local (`true`) or remote (`false`) speech synthesizer service.\r\n   *\r\n   * @example true\r\n   */\r\n  localService: boolean;\r\n  /**\r\n   * Human-readable name that represents the voice.\r\n   *\r\n   * @example \"Microsoft Zira Desktop - English (United States)\"\r\n   */\r\n  name: string;\r\n  /**\r\n   * Type of URI and location of the speech synthesis service for this voice.\r\n   *\r\n   * @example \"urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US\"\r\n   */\r\n  voiceURI: string;\r\n}\r\n"]}