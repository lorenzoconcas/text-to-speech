{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { TextToSpeechPlugin, TTSOptions } from './definitions';\r\n\r\nexport class TextToSpeechWeb extends WebPlugin implements TextToSpeechPlugin {\r\n  private speechSynthesis: SpeechSynthesis | null = null;\r\n  private supportedVoices: SpeechSynthesisVoice[] | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    if ('speechSynthesis' in window) {\r\n      this.speechSynthesis = window.speechSynthesis;\r\n      window.addEventListener('beforeunload', () => {\r\n        this.stop();\r\n      });\r\n    }\r\n  }\r\n\r\n  public async speak(options: TTSOptions): Promise<void> {\r\n    if (!this.speechSynthesis) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    await this.stop();\r\n    const speechSynthesis = this.speechSynthesis;\r\n    const utterance = this.createSpeechSynthesisUtterance(options);\r\n    return new Promise((resolve, reject) => {\r\n      utterance.onend = () => {\r\n        resolve();\r\n      };\r\n      utterance.onerror = (event: any) => {\r\n        reject(event);\r\n      };\r\n      speechSynthesis.speak(utterance);\r\n    });\r\n  }\r\n\r\n  public async stop(): Promise<void> {\r\n    if (!this.speechSynthesis) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    this.speechSynthesis.cancel();\r\n  }\r\n\r\n  public async getSupportedLanguages(): Promise<{ languages: string[] }> {\r\n    const voices = this.getSpeechSynthesisVoices();\r\n    const languages = voices.map((voice) => voice.lang);\r\n    const filteredLanguages = languages.filter((v, i, a) => a.indexOf(v) == i);\r\n    return { languages: filteredLanguages };\r\n  }\r\n\r\n  public async getSupportedVoices(): Promise<{\r\n    voices: SpeechSynthesisVoice[];\r\n  }> {\r\n    const voices = this.getSpeechSynthesisVoices();\r\n    return { voices };\r\n  }\r\n\r\n  public async isLanguageSupported(options: { lang: string }): Promise<{ supported: boolean }> {\r\n    const result = await this.getSupportedLanguages();\r\n    const isLanguageSupported = result.languages.includes(options.lang);\r\n    return { supported: isLanguageSupported };\r\n  }\r\n\r\n  public async openInstall(): Promise<void> {\r\n    this.throwUnimplementedError();\r\n  }\r\n\r\n  private createSpeechSynthesisUtterance(options: TTSOptions): SpeechSynthesisUtterance {\r\n    const voices = this.getSpeechSynthesisVoices();\r\n    const utterance = new SpeechSynthesisUtterance();\r\n    const { text, lang, rate, pitch, volume, voice } = options;\r\n    if (voice) {\r\n      utterance.voice = voices[voice];\r\n    }\r\n    if (volume) {\r\n      utterance.volume = volume >= 0 && volume <= 1 ? volume : 1;\r\n    }\r\n    if (rate) {\r\n      utterance.rate = rate >= 0.1 && rate <= 10 ? rate : 1;\r\n    }\r\n    if (pitch) {\r\n      utterance.pitch = pitch >= 0 && pitch <= 2 ? pitch : 2;\r\n    }\r\n    if (lang) {\r\n      utterance.lang = lang;\r\n    }\r\n    utterance.text = text;\r\n    return utterance;\r\n  }\r\n\r\n  private getSpeechSynthesisVoices(): SpeechSynthesisVoice[] {\r\n    if (!this.speechSynthesis) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    if (!this.supportedVoices || this.supportedVoices.length < 1) {\r\n      this.supportedVoices = this.speechSynthesis.getVoices();\r\n    }\r\n    return this.supportedVoices;\r\n  }\r\n\r\n  private throwUnsupportedError(): never {\r\n    throw this.unavailable('SpeechSynthesis API not available in this browser.');\r\n  }\r\n\r\n  private throwUnimplementedError(): never {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n}\r\n"]}