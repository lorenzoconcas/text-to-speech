{"version":3,"file":"plugin.js","sources":["esm/definitions.js","esm/index.js","esm/web.js"],"sourcesContent":["export var QueueStrategy;\r\n(function (QueueStrategy) {\r\n    /**\r\n     * Use `Flush` to stop the current request when a new request is sent.\r\n     */\r\n    QueueStrategy[QueueStrategy[\"Flush\"] = 0] = \"Flush\";\r\n    /**\r\n     * Use `Add` to buffer the speech request. The request will be executed when all previous requests have been completed.\r\n     */\r\n    QueueStrategy[QueueStrategy[\"Add\"] = 1] = \"Add\";\r\n})(QueueStrategy || (QueueStrategy = {}));\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nconst TextToSpeech = registerPlugin('TextToSpeech', {\r\n    web: () => import('./web').then((m) => new m.TextToSpeechWeb()),\r\n});\r\n// Warm up\r\nif ('speechSynthesis' in window) {\r\n    window.speechSynthesis;\r\n}\r\nexport * from './definitions';\r\nexport { TextToSpeech };\r\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\r\nfunction findWordEnd(text, from) {\r\n    let i = from;\r\n    while (i < text.length && !/\\s/.test(text[i]))\r\n        i++;\r\n    return i;\r\n}\r\nexport class TextToSpeechWeb extends WebPlugin {\r\n    constructor() {\r\n        super();\r\n        this.speechSynthesis = null;\r\n        if ('speechSynthesis' in window) {\r\n            this.speechSynthesis = window.speechSynthesis;\r\n            window.addEventListener('beforeunload', () => {\r\n                this.stop();\r\n            });\r\n        }\r\n    }\r\n    async speak(options) {\r\n        if (!this.speechSynthesis)\r\n            this.throwUnsupportedError();\r\n        return new Promise((resolve, reject) => {\r\n            const u = this.createSpeechSynthesisUtterance(options);\r\n            u.onboundary = ev => {\r\n                console.log(\"webtts range \", ev.name === 'word');\r\n                if (ev.name !== 'word')\r\n                    return;\r\n                const start = ev.charIndex;\r\n                const end = typeof ev.charLength === 'number'\r\n                    ? start + ev.charLength\r\n                    : findWordEnd(options.text, start);\r\n                console.log(\"webtts  range\");\r\n                this.notifyListeners('onRangeStart', {\r\n                    start,\r\n                    end,\r\n                    spokenWord: options.text.slice(start, end),\r\n                });\r\n            };\r\n            u.onend = () => {\r\n                console.log(\"webtts done\");\r\n                this.notifyListeners('onDone', {});\r\n                resolve();\r\n            };\r\n            u.onerror = ev => { var _a; return reject((_a = ev.error) !== null && _a !== void 0 ? _a : ev); };\r\n            if (options.queueStrategy === 0)\r\n                this.speechSynthesis.cancel();\r\n            console.log(\"all things setted\");\r\n            this.notifyListeners(\"started\", {});\r\n            this.speechSynthesis.speak(u);\r\n        });\r\n    }\r\n    async stop() {\r\n        if (!this.speechSynthesis) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        this.speechSynthesis.cancel();\r\n    }\r\n    async getSupportedLanguages() {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        const languages = voices.map((voice) => voice.lang);\r\n        const filteredLanguages = languages.filter((v, i, a) => a.indexOf(v) == i);\r\n        return { languages: filteredLanguages };\r\n    }\r\n    async getSupportedVoices() {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        return { voices };\r\n    }\r\n    async isLanguageSupported(options) {\r\n        const result = await this.getSupportedLanguages();\r\n        const isLanguageSupported = result.languages.includes(options.lang);\r\n        return { supported: isLanguageSupported };\r\n    }\r\n    async openInstall() {\r\n        this.throwUnimplementedError();\r\n    }\r\n    createSpeechSynthesisUtterance(options) {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        const utterance = new SpeechSynthesisUtterance();\r\n        const { text, lang, rate, pitch, volume, voice } = options;\r\n        if (voice) {\r\n            utterance.voice = voices[voice];\r\n        }\r\n        if (volume) {\r\n            utterance.volume = volume >= 0 && volume <= 1 ? volume : 1;\r\n        }\r\n        if (rate) {\r\n            utterance.rate = rate >= 0.1 && rate <= 10 ? rate : 1;\r\n        }\r\n        if (pitch) {\r\n            utterance.pitch = pitch >= 0 && pitch <= 2 ? pitch : 2;\r\n        }\r\n        if (lang) {\r\n            utterance.lang = lang;\r\n        }\r\n        utterance.text = text;\r\n        return utterance;\r\n    }\r\n    getSpeechSynthesisVoices() {\r\n        if (!this.speechSynthesis) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (!this.supportedVoices || this.supportedVoices.length < 1) {\r\n            this.supportedVoices = this.speechSynthesis.getVoices();\r\n        }\r\n        return this.supportedVoices;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('SpeechSynthesis API not available in this browser.');\r\n    }\r\n    throwUnimplementedError() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["QueueStrategy","registerPlugin","WebPlugin"],"mappings":"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"}